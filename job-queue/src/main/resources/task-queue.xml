<databaseChangeLog
  xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
  http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.4.xsd"
>


  <!-- QUEUE CHANGESET -->
  <changeSet id="task-queue-table" author="reeferman" context="vertx">
    <createTable tableName="task_queue" schemaName="${schema}">
      <column type="text" name="message_id"/>
      <column type="text" name="payload_class"/>
      <column type="timestamp" name="scheduled"/>
      <column type="timestamp" name="expiration"/>
      <column type="integer" name="priority" defaultValue="0"/>
      <column type="integer" name="retry_counter" defaultValue="0"/>
      <column type="text" name="state"/>
      <column type="jsonb" name="payload"/>
      <column type="jsonb" name="failures"/>
      <column type="text" name="verticle_id"/>
      <!--  Repository Entity    -->
      <column type="text" name="tenant"/>
      <column type="timestamp" name="creation_date" defaultValueComputed="current_timestamp"/>
      <column type="timestamp" name="last_update" defaultValueComputed="current_timestamp"/>
      <column type="int" name="version" defaultValue="0"/>
    </createTable>
  </changeSet>
  <changeSet id="task-queue-index" author="reeferman" context="vertx">
    <addPrimaryKey tableName="task_queue" columnNames="message_id, tenant" schemaName="${schema}"/>
    <createIndex tableName="task_queue" indexName="task-queue-index" schemaName="${schema}">
      <column name="state"/>
      <column name="retry_counter"/>
      <column name="last_update"/>
      <column name="priority"/>
      <column name="scheduled"/>
    </createIndex>
  </changeSet>
  <!--  -->
  <!-- Queue Function -->
  <changeSet id="task-queue_pub_function" author="reeferman" context="vertx">
    <sql splitStatements="false">
      CREATE
      OR REPLACE FUNCTION ${schema}.task_queue_pub() RETURNS
      trigger
      AS
      $$
      BEGIN
        PERFORM pg_notify('task_queue_ch', NEW.message_id::text);
        RETURN NEW;
      END;
      $$ LANGUAGE plpgsql;
    </sql>
  </changeSet>
  <!--  -->
  <!-- Queue Function -->
  <changeSet id="task-queue_trigger" author="reeferman" context="vertx">
    <sql splitStatements="false">
      CREATE TRIGGER task_queue_pub_trg
        AFTER INSERT OR
      UPDATE OF version
      ON ${schema}.task_queue
        EXECUTE PROCEDURE task_queue_pub();
    </sql>
  </changeSet>
  <!--  -->

  <!-- Transaction Log -->
  <changeSet id="job-queue-tx-table" author="reeferman" context="vertx">
    <createTable tableName="task_queue_tx" schemaName="${schema}">
      <column type="text" name="message_id"/>
      <column type="text" name="processor"/>
      <column type="text" name="type"/>
      <!--  Repository Entity    -->
      <column type="text" name="tenant"/>
      <column type="timestamp" name="creation_date" defaultValueComputed="current_timestamp"/>
      <column type="timestamp" name="last_update" defaultValueComputed="current_timestamp"/>
      <column type="int" name="version" defaultValue="0"/>
    </createTable>
  </changeSet>
  <changeSet id="task-queue_tx-index" author="reeferman" context="vertx">
    <addPrimaryKey tableName="task_queue_tx" columnNames="message_id, tenant" schemaName="${schema}"/>
    <createIndex tableName="task_queue_tx" indexName="task-queue-tx-index-1" schemaName="${schema}">
      <column name="message_id"/>
      <column name="processor"/>
      <column name="type"/>
      <column name="tenant"/>
    </createIndex>
    <createIndex tableName="task_queue_tx" indexName="task-queue-tx-index-2" schemaName="${schema}">
      <column name="message_id"/>
      <column name="processor"/>
      <column name="type"/>
    </createIndex>
  </changeSet>
  <!--  -->

<!--  Dead Letter -->

  <changeSet id="dead-letter-table" author="reeferman" context="vertx">
    <createTable tableName="task_queue_dead_letter" schemaName="${schema}">
      <column type="text" name="message_id"/>
      <column type="text" name="payload_class"/>
      <column type="timestamp" name="scheduled"/>
      <column type="timestamp" name="expiration"/>
      <column type="integer" name="priority" defaultValue="0"/>
      <column type="integer" name="retry_counter" defaultValue="0"/>
      <column type="text" name="state"/>
      <column type="jsonb" name="payload"/>
      <column type="jsonb" name="failures"/>
      <column type="text" name="verticle_id"/>
      <!--  Repository Entity    -->
      <column type="text" name="tenant"/>
      <column type="timestamp" name="creation_date" defaultValueComputed="current_timestamp"/>
      <column type="timestamp" name="last_update" defaultValueComputed="current_timestamp"/>
      <column type="int" name="version" defaultValue="0"/>
    </createTable>
  </changeSet>

<!--  -->
</databaseChangeLog>
